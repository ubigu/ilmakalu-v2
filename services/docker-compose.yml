version: "3.8"

# TODO:
# map volumes to physical locations on disk
volumes:
  ilmakalu-data:
    external: false
  ilmakalu-user-data:
    external: false
    
services:
  database:
    image: kartoza/postgis:13.0
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: postgres
      ILMAKALU_USER: ${ILMAKALU_USER}
      ILMAKALU_USER_PW: ${ILMAKALU_USER_PW}
      ILMAKALU_DB: ${ILMAKALU_DB}
      POSTGRES_MULTIPLE_EXTENSIONS: postgis,"uuid-ossp"
      DEFAULT_CTYPE: 'fi_FI.UTF8'
      DEFAULT_COLLATION: 'fi_FI.UTF8'
      TZ: Europe/Helsinki
      PASSWORD_AUTHENTICATION: "md5"
    volumes:
      - ./inits/00-init-user-db.sh:/docker-entrypoint-initdb.d/00-init-user-db.sh
      - ./inits/01-init.sh:/docker-entrypoint-initdb.d/01-init.sh
      - ./inits/02-init-schemas.sql:/docker-entrypoint-initdb.d/02-init-schemas.sql
      - ilmakalu-data:/var/lib/postgresql # Add :cached if needed. This is for Linux env and now dev is done on windows. 
    ports:
      - "5435:5432"
    restart: on-failure
    healthcheck:
     test: "exit 0"
    shm_size: 1g
  user_database:
    image: kartoza/postgis:13.0
    environment:
      POSTGRES_USER: ${POSTGRES2_USER}
      POSTGRES_PASSWORD: ${POSTGRES2_PASSWORD}
      POSTGRES_DB: postgres
      ILMAKALU_USER: ${ILMAKALU2_USER}
      ILMAKALU_USER_PW: ${ILMAKALU2_USER_PW}
      ILMAKALU_DB: ${ILMAKALU2_DB}
      DEFAULT_CTYPE: 'fi_FI.UTF8'
      DEFAULT_COLLATION: 'fi_FI.UTF8'
      TZ: Europe/Helsinki
      PASSWORD_AUTHENTICATION: "md5"
    volumes:
      - ./inits/00-init-user-db.sh:/docker-entrypoint-initdb.d/00-init-user-db.sh
      - ./user_database_inits/01-init.sh:/docker-entrypoint-initdb.d/01-init.sh
      - ./user_database_inits/02-init.sh:/docker-entrypoint-initdb.d/02-init.sh
      - ilmakalu-user-data:/var/lib/postgresql
    ports:
      - "15435:5432"
    restart: on-failure
    healthcheck:
     test: "exit 0"
    shm_size: 1g
  graphhopper-finland:
    image: graphhopper:finland
    build:
      context: graphhopper
      args:
        - COUNTRY=finland
    ports:
      - "18989:8989"
    environment:
      - COUNTRY=finland
