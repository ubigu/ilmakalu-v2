routing:
  graphhopper:
    port: <port>
    base_url: "http://localhost:{}/route?point={},{}&point={},{}&vehicle=car&locale=fi&calc_points=false"
isochrones:
  graphhopper:
    port: <port>
    base_url: "http://localhost:{}/isochrone?point={},{}&reverse_flow=true&vehicle=car&distance_limit={}"

database:
  local_dev:
    host: <host>
    port: <port>
    user: <user>
    pass: <password>
    database: <database>

wfs:
  url: <WFS Service URL>
  version: <WFS version>
  layer: <namespace that defines layer (workspace:layer)>
  floor_area_attribute: <attribute that represents building floor area>
  fuel_attribute: <attribute that represents fuel used by a building>
  building_type_attribute: <attribute that represents a purpose of a building>


target:
  municipality: <three digit national code as string>
  num_nearest_centers: <number of nearest centers to search for minimum distance>